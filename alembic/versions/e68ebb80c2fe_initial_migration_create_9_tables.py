"""Initial migration - Create 9 tables

Revision ID: e68ebb80c2fe
Revises: 
Create Date: 2025-10-27 12:22:22.081926

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e68ebb80c2fe'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create users table first (without group_id foreign key)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('nickname', sa.String(length=60), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('group_id', sa.BigInteger(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    
    op.create_table('budgets',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('owner_type', sa.Enum('USER', 'GROUP', name='ownertype'), nullable=False),
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('period', sa.String(length=7), nullable=False),
    sa.Column('total_amount', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'CLOSED', 'DRAFT', name='budgetstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_type', 'owner_id', 'period', name='ux_budget_owner_period')
    )
    op.create_index('idx_budgets_owner', 'budgets', ['owner_type', 'owner_id'], unique=False)
    # Create groups table with users foreign key
    op.create_table('groups',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('groups_owner_id_fkey', 'groups', ['owner_id'], unique=False)
    
    # Add foreign key constraint for users.group_id
    op.create_foreign_key('users_group_id_fkey', 'users', 'groups', ['group_id'], ['id'])
    op.create_index('idx_users_group', 'users', ['group_id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('budget_amount', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'name', 'type', name='ux_category_name')
    )
    op.create_index('idx_categories_creator', 'categories', ['created_by'], unique=False)
    op.create_index('idx_categories_group', 'categories', ['group_id'], unique=False)
    op.create_table('group_invites',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index('group_invites_created_by_fkey', 'group_invites', ['created_by'], unique=False)
    op.create_index('idx_group_invites_expires', 'group_invites', ['expires_at'], unique=False)
    op.create_index('idx_group_invites_group', 'group_invites', ['group_id'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'name', name='ux_tag')
    )
    op.create_index('idx_tags_group', 'tags', ['group_id'], unique=False)
    op.create_index('tags_created_by_fkey', 'tags', ['created_by'], unique=False)
    op.create_table('recurring_rules',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('frequency', sa.Enum('MONTHLY', 'WEEKLY', 'DAILY', name='recurringfrequency'), nullable=False),
    sa.Column('day_rule', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('category_id', sa.BigInteger(), nullable=True),
    sa.Column('merchant', sa.String(length=160), nullable=True),
    sa.Column('memo', sa.String(length=1000), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_recurring_rules_creator_active', 'recurring_rules', ['created_by', 'is_active'], unique=False)
    op.create_index('idx_recurring_rules_frequency_active', 'recurring_rules', ['frequency', 'is_active'], unique=False)
    op.create_index('idx_recurring_rules_group_active', 'recurring_rules', ['group_id', 'is_active'], unique=False)
    op.create_index('recurring_rules_category_id_fkey', 'recurring_rules', ['category_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=True),
    sa.Column('owner_user_id', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.Enum('EXPENSE', 'INCOME', 'TRANSFER', name='transactiontype'), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('category_id', sa.BigInteger(), nullable=True),
    sa.Column('tag_id', sa.BigInteger(), nullable=True),
    sa.Column('merchant', sa.String(length=160), nullable=True),
    sa.Column('memo', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tx_category', 'transactions', ['category_id'], unique=False)
    op.create_index('idx_tx_group_date', 'transactions', ['group_id', 'date'], unique=False)
    op.create_index('idx_tx_owner_date', 'transactions', ['owner_user_id', 'date'], unique=False)
    op.create_index('idx_tx_tag', 'transactions', ['tag_id'], unique=False)
    op.create_table('attachments',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), nullable=False),
    sa.Column('file_url', sa.String(length=500), nullable=False),
    sa.Column('mime', sa.String(length=100), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('attachments_transaction_id_fkey', 'attachments', ['transaction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('attachments_transaction_id_fkey', table_name='attachments')
    op.drop_table('attachments')
    op.drop_index('idx_tx_tag', table_name='transactions')
    op.drop_index('idx_tx_owner_date', table_name='transactions')
    op.drop_index('idx_tx_group_date', table_name='transactions')
    op.drop_index('idx_tx_category', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('recurring_rules_category_id_fkey', table_name='recurring_rules')
    op.drop_index('idx_recurring_rules_group_active', table_name='recurring_rules')
    op.drop_index('idx_recurring_rules_frequency_active', table_name='recurring_rules')
    op.drop_index('idx_recurring_rules_creator_active', table_name='recurring_rules')
    op.drop_table('recurring_rules')
    op.drop_index('tags_created_by_fkey', table_name='tags')
    op.drop_index('idx_tags_group', table_name='tags')
    op.drop_table('tags')
    op.drop_index('idx_group_invites_group', table_name='group_invites')
    op.drop_index('idx_group_invites_expires', table_name='group_invites')
    op.drop_index('group_invites_created_by_fkey', table_name='group_invites')
    op.drop_table('group_invites')
    op.drop_index('idx_categories_group', table_name='categories')
    op.drop_index('idx_categories_creator', table_name='categories')
    op.drop_table('categories')
    op.drop_index('idx_users_group', table_name='users')
    op.drop_constraint('users_group_id_fkey', 'users', type_='foreignkey')
    op.drop_table('groups')
    op.drop_index('groups_owner_id_fkey', table_name='groups')
    op.drop_table('users')
    op.drop_index('idx_budgets_owner', table_name='budgets')
    op.drop_table('budgets')
    # ### end Alembic commands ###

